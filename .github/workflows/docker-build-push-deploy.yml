name: CI to Docker Hub

on:
  push:
    branches: [ main ]
jobs:

  build:
    runs-on: ubuntu-latest
    
    steps:
    
      - name: Check Out Repo 
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/nextjs-example:${{ GITHUB_SHA }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
    
  test_webhook:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Runs a single command using the runners shell
    - name: Invoke deployment hook
      uses: distributhor/workflow-webhook@v2
      env:
        webhook_url: ${{ secrets.WEBHOOK_URL }}
        webhook_secret: ${{ secrets.WEBHOOK_SECRET }}
        data: '{ "dockerImage":"${{ secrets.DOCKER_HUB_USERNAME }}/nextjs-example:${{ GITHUB_SHA }}" }'

#   deploy:
#     runs-on: ubuntu-latest
#     needs: build
#     steps:
      
#       - name: Checkout
#         uses: actions/checkout@v2
      
#       - name: 'Install OCI CLI'
#         run: |
#           mkdir ~/.oci
#           echo "${{ secrets.OCI_CONFIG }}" > ~/.oci/config
#           echo "${{ secrets.OCI_KEY_FILE }}" > ~/.oci/key.pem
#           curl -L -O https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh
#           chmod +x install.sh
#           ./install.sh --accept-all-defaults
#           echo "/home/runner/bin" >> $GITHUB_PATH
#           exec -l $SHELL
#           oci setup repair-file-permissions --file /home/runner/.oci/config
#           oci setup repair-file-permissions --file /home/runner/.oci/key.pem
          
#       - name: 'Install kubectl'
#         run: |
#           mkdir /tmp/.kube
#           curl -L -O "https://dl.k8s.io/release/v1.22.4/bin/linux/amd64/kubectl" -o kubectl
#           chmod +x kubectl
#           mv kubectl /usr/local/bin
#           echo "${{ secrets.KUBECONFIG }}" > /tmp/.kube/config
#           echo "KUBECONFIG=/tmp/.kube/config" >> $GITHUB_ENV
#       - name: Deploy to K8S
#         run: |
#           kubectl apply -f k8/deployment.yaml
#           kubectl apply -f k8/service.yaml
#       - name: Rollout Nextjs
#         run: |
#           kubectl rollout restart deployment nextjs-demo
